application {

  config {

    baseName gateway 

    reactive true 

    packageName com.farhad.example.jhipster.gateway

    applicationType gateway

    authenticationType oauth2 

    buildTool gradle 

    clientFramework vue 

    prodDatabaseType postgresql

    serviceDiscoveryType eureka

    testFrameworks [protractor]

  }

  entities Blog, Post, Tag, Product

}


application {

  config {

    baseName blog

    reactive true

    packageName com.farhad.example.jhipster.blog

    applicationType microservice 

    authenticationType oauth2

    buildTool gradle

    databaseType neo4j

    devDatabaseType neo4j

    prodDatabaseType neo4j

    enableHibernateCache false

    serverPort 8081

    serviceDiscoveryType eureka

  }

  entities Blog, Post, Tag

}


application {

  config {

    baseName store

    reactive true

    packageName com.farhad.example.jhipster.store

    applicationType microservice

    authenticationType oauth2

    buildTool gradle

    databaseType mongodb

    devDatabaseType mongodb

    prodDatabaseType mongodb

    enableHibernateCache false

    serverPort 8082

    serviceDiscoveryType eureka

  }

  entities Product

}


entity Blog {

  name String required minlength(3)

  handle String required minlength(2)

}


entity Post {

  title String required

  content TextBlob required

  date Instant required

}


entity Tag {

  name String required minlength(2)

}


entity Product {

  title String required

  price BigDecimal required min(0)

  image ImageBlob

}


relationship ManyToOne {

  Blog{user(login)} to User

  Post{blog(name)} to Blog

}


relationship ManyToMany {

  Post{tag(name)} to Tag{post}

}


paginate Post, Tag with infinite-scroll

paginate Product with pagination


microservice Product with store

microservice Blog, Post, Tag with blog


deployment { 

  deploymentType docker-compose

  appsFolders [gateway, blog, store]

  dockerRepositoryName "mraible"

}


### jhipster jdl reactive-ms.jdl
### 
### cd gateway
### docker-compose -f src/main/docker/keycloak.yml up -d #jhkeycloakup
### docker-compose -f src/main/docker/postgresql.yml up -d #jhpostgresqlup
### docker-compose -f src/main/docker/jhipster-registry.yml up -d #jhregistryup
### ./gradlew
### 
### cd ../blog
### docker-compose -f src/main/docker/neo4j.yml up -d #jhneo4jup
### ./gradlew
### 
### cd ../store
### docker-compose -f src/main/docker/mongodb.yml up -d #jhmongoup
### ./gradlew 
### 
### To make Keycloak work, you need to add the following line to your hosts file (/etc/hosts)
### 127.0.0.1    keycloak

